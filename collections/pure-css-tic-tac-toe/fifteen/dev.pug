mixin cross()
  svg.x(class!=attributes.class style!=attributes.style viewBox="0 0 100 100")
    path(d="M 80 20 L 20 80" stroke-dasharray="100" stroke-width="10" stroke-linecap="round")
    path(d="M 20 20 L 80 80" stroke-dasharray="100" stroke-width="10" stroke-linecap="round")
mixin naught()
  svg.o(class!=attributes.class style!=attributes.style viewBox="0 0 100 100")
    circle(r="30" cx="50" cy="50" stroke-dasharray="200" stroke-width="10" stroke-linecap="round" fill="none")
form.game
  - for (let i = 0; i < 9; i++)
    - const x = i % 3
    - const y = Math.floor(i / 3)
    input(type='checkbox' id=`x-${i}`)
    +cross()(class="game__piece" style=`--x: ${x}; --y: ${y}`)
    input(type='checkbox' id=`o-${i}`)
    +naught()(class="game__piece" style=`--x: ${x}; --y: ${y}`)
  .board
    - const DELAYS = [0, 3, 1, 2]
    - for (let l = 0; l < 4; l++)
      - const rotate = l % 2
      - const shift = 2 % (l + 1) ? 1 : -1
      svg.board__line(viewBox="0 0 10 300" style=`--rotate: ${rotate}; --shift: ${shift}; --delay: ${DELAYS[l]};`)
        path(d="M 5 5 L 5 295" stroke-dasharray="300" stroke-width="10" stroke-linecap="round")
    - for (let i = 0; i < 9; i++)
      .board__cell
        label(for=`x-${i}`)
        label(for=`o-${i}`)
  .game__result.game__result--x.result
    .result__content
      .result__title X Wins!
      +cross()(class="result__winner")
  .game__result.game__result--o.result
    .result__content
      .result__title O Wins!
      +naught()(class="result__winner")
  .game__result.game__result--draw.result
    .result__content
      .result__title Draw...
  button(type="reset" title="Reset Board")
    svg.reset(viewBox="0 0 24 24")
      path(d="M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z")
